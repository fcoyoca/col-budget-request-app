// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using budget_request_app.WebApi.CapitalProject.Infrastructure.Persistence;

#nullable disable

namespace budget_request_app.WebApi.Migrations.MSSQL.CapitalProject
{
    [DbContext(typeof(CapitalProjectDbContext))]
    [Migration("20250530030110_munisprojectnumber")]
    partial class munisprojectnumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("capitalProject")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.ApprovalOversight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedMasterPlanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedMasterPlanTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ApprovingOversightBoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfOversightApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("HasReceivedOtherApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRequestBeenApprovedByOversight")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasRequiredOtherApproval")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LegistarApprovalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PartOfApprovedMasterPlan")
                        .HasColumnType("bit");

                    b.Property<string>("ReceivedOtherApprovals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemainingOtherApprovals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequireOtherApproval")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ApprovalOversight", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.BorrowingFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("BorrowingFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdvancedFundsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AmountAdvanced")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AmountDonated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ApprovalOversightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BudgetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DonatedAmountCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DonationArrangements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DonationFundingIsContributeFundsRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("DonationFundingIsDonatedFundsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("FileIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GISMappingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeneralInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GrantFundingOpportunityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsMappedRequest")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JustificationPrioritizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MunisProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestNumber")
                        .HasColumnType("int");

                    b.Property<string>("RevisionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatusTimelineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TIFFundingIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalOversightId");

                    b.HasIndex("GeneralInformationId");

                    b.HasIndex("GrantFundingOpportunityId");

                    b.HasIndex("JustificationPrioritizationId");

                    b.HasIndex("ProjectManagementId");

                    b.HasIndex("StatusTimelineId");

                    b.ToTable("CapitalProjects", "capitalProject");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.DonationFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("DonationFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.FundingChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChangeTypeIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("FundingChange", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BorrowingFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonationFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GrantFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OperatingFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OtherFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpecialFundingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpendingBudgetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowingFundingId");

                    b.HasIndex("DonationFundingId");

                    b.HasIndex("GrantFundingId");

                    b.HasIndex("OperatingFundingId");

                    b.HasIndex("OtherFundingId");

                    b.HasIndex("SpecialFundingId");

                    b.HasIndex("SpendingBudgetId");

                    b.ToTable("FundingYearItem", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.GeneralInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentHeadRequestorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RemarksPrintout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("RequestStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestingDepartmentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiresTwoThirdsApproval")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralInformation", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.GrantFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CashMatchAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CashMatchPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GrantingAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("GrantFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.GrantFundingOpportunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CongressionallyDirectedSpendingRequestOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GrantFundingOpportunities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TimeSpentReviewingGrantFunding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("WasCongressionallyDirectedSpendingRequestMade")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("GrantFundingOpportunity", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.JustificationPrioritization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BudgetDetermination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DepartmentPriorityRanking")
                        .HasColumnType("int");

                    b.Property<string>("DesiredOutcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OutcomeMeasurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProjectRankScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProjectScoreYear")
                        .HasColumnType("int");

                    b.Property<string>("SustainabilityGoals")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JustificationPrioritization", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.MinorProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("MinorProject", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FTCount")
                        .HasColumnType("int");

                    b.Property<Guid>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("OperatingCost", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("OperatingFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingRevenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("OperatingRevenue", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OtherFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("OtherFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.PastFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CIPItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSubSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceOfFunds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("PastFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.PastSpending", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CIPItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpendingPurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("PastSpending", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.ProjectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MunisAccounts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagement", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpecialFunding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FundingSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("SpecialFunding", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpendingBudget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenditureCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpendingPurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.HasIndex("YearRequestedId");

                    b.ToTable("SpendingBudget", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.StatusTimeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentPointOfContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndYearMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonForMoreThanOneYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartYearMonth")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusTimeline", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.StreetSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapitalProjectItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurbAndGutter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurbRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PavementRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RightOfWay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyImprovements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sidewalks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetscapingLighting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CapitalProjectItemId");

                    b.ToTable("StreetSegment", "capitalProject");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.BorrowingFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("BorrowingFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.ApprovalOversight", "ApprovalOversight")
                        .WithMany()
                        .HasForeignKey("ApprovalOversightId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.GeneralInformation", "GeneralInformation")
                        .WithMany()
                        .HasForeignKey("GeneralInformationId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.GrantFundingOpportunity", "GrantFundingOpportunity")
                        .WithMany()
                        .HasForeignKey("GrantFundingOpportunityId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.JustificationPrioritization", "JustificationPrioritization")
                        .WithMany()
                        .HasForeignKey("JustificationPrioritizationId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.ProjectManagement", "ProjectManagement")
                        .WithMany()
                        .HasForeignKey("ProjectManagementId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.StatusTimeline", "StatusTimeline")
                        .WithMany()
                        .HasForeignKey("StatusTimelineId");

                    b.Navigation("ApprovalOversight");

                    b.Navigation("GeneralInformation");

                    b.Navigation("GrantFundingOpportunity");

                    b.Navigation("JustificationPrioritization");

                    b.Navigation("ProjectManagement");

                    b.Navigation("StatusTimeline");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.DonationFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("DonationFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.FundingChange", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("FundingChanges")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.BorrowingFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("BorrowingFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.DonationFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("DonationFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.GrantFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("GrantFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.OperatingFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("OperatingFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.OtherFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("OtherFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.SpecialFunding", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("SpecialFundingId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.SpendingBudget", null)
                        .WithMany("YearEstimates")
                        .HasForeignKey("SpendingBudgetId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.GrantFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("GrantFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.MinorProject", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("MinorProjects")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingCost", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("OperatingCosts")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("OperatingFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingRevenue", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("OperatingRevenues")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OtherFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("OtherFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.PastFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("PastFundings")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.PastSpending", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("PastSpendings")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpecialFunding", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("SpecialFundings")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpendingBudget", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("SpendingBudgets")
                        .HasForeignKey("CapitalProjectItemId");

                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.FundingYearItem", "YearRequested")
                        .WithMany()
                        .HasForeignKey("YearRequestedId");

                    b.Navigation("YearRequested");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.StreetSegment", b =>
                {
                    b.HasOne("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", null)
                        .WithMany("StreetSegments")
                        .HasForeignKey("CapitalProjectItemId");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.BorrowingFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.CapitalProjectItem", b =>
                {
                    b.Navigation("BorrowingFundings");

                    b.Navigation("DonationFundings");

                    b.Navigation("FundingChanges");

                    b.Navigation("GrantFundings");

                    b.Navigation("MinorProjects");

                    b.Navigation("OperatingCosts");

                    b.Navigation("OperatingFundings");

                    b.Navigation("OperatingRevenues");

                    b.Navigation("OtherFundings");

                    b.Navigation("PastFundings");

                    b.Navigation("PastSpendings");

                    b.Navigation("SpecialFundings");

                    b.Navigation("SpendingBudgets");

                    b.Navigation("StreetSegments");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.DonationFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.GrantFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OperatingFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.OtherFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpecialFunding", b =>
                {
                    b.Navigation("YearEstimates");
                });

            modelBuilder.Entity("budget_request_app.WebApi.CapitalProject.Domain.SpendingBudget", b =>
                {
                    b.Navigation("YearEstimates");
                });
#pragma warning restore 612, 618
        }
    }
}
